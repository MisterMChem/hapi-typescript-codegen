{"version":3,"file":"index.js","sources":["../dist-src/utils.js","../dist-src/property-mapper.js","../dist-src/v2.js","../dist-src/v3.js","../dist-src/index.js"],"sourcesContent":["export function comment(text) {\n    return `/**\n  * ${text.trim().replace(\"\\n+$\", \"\").replace(/\\n/g, \"\\n  * \")}\n  */\n`;\n}\nexport function fromEntries(entries) {\n    return entries.reduce((obj, [key, val]) => ({ ...obj, [key]: val }), {});\n}\nexport function nodeType(obj) {\n    if (!obj || typeof obj !== \"object\") {\n        return undefined;\n    }\n    if (obj[\"$ref\"]) {\n        return \"ref\";\n    }\n    if (Array.isArray(obj.enum)) {\n        return \"enum\";\n    }\n    if (obj.type === \"boolean\") {\n        return \"boolean\";\n    }\n    if ([\"binary\", \"byte\", \"date\", \"dateTime\", \"password\", \"string\"].includes(obj.type)) {\n        return \"string\";\n    }\n    if ([\"double\", \"float\", \"integer\", \"number\"].includes(obj.type)) {\n        return \"number\";\n    }\n    if (Array.isArray(obj.anyOf)) {\n        return \"anyOf\";\n    }\n    if (Array.isArray(obj.oneOf)) {\n        return \"oneOf\";\n    }\n    if (obj.type === \"array\" || obj.items) {\n        return \"array\";\n    }\n    return \"object\";\n}\nexport function swaggerVersion(definition) {\n    const { openapi } = definition;\n    if (openapi && parseInt(openapi, 10) === 3) {\n        return 3;\n    }\n    const { swagger } = definition;\n    if (swagger && parseInt(swagger, 10) === 2) {\n        return 2;\n    }\n    throw new Error(`üöè version missing from schema; specify whether this is OpenAPI v3 or v2 https://swagger.io/specification`);\n}\nexport function transformRef(ref) {\n    const parts = ref.replace(/^#\\//, \"\").split(\"/\");\n    return `${parts[0]}[\"${parts.slice(1).join('\"][\"')}\"]`;\n}\nexport function tsArrayOf(type) {\n    return `(${type})[]`;\n}\nexport function tsIntersectionOf(types) {\n    return `(${types.join(\") & (\")})`;\n}\nexport function tsPartial(type) {\n    return `Partial<${type}>`;\n}\nexport function tsUnionOf(types) {\n    return `(${types.join(\") | (\")})`;\n}\n","import { fromEntries } from \"./utils\";\nexport default function propertyMapper(schema, transform) {\n    if (!transform) {\n        return schema;\n    }\n    return JSON.parse(JSON.stringify(schema), (_, node) => {\n        if (!node.properties) {\n            return node;\n        }\n        node.properties = fromEntries(Object.entries(node.properties).map(([key, val]) => {\n            if (val.$ref) {\n                return [key, val];\n            }\n            const schemaObject = val;\n            const property = transform(schemaObject, {\n                interfaceType: schemaObject.type,\n                optional: !Array.isArray(node.required) || node.required.includes(key),\n                description: schemaObject.description,\n            });\n            if (property.optional) {\n                if (Array.isArray(node.required)) {\n                    node.required = node.required.filter((r) => r !== key);\n                }\n            }\n            else {\n                node.required = [...(node.required || []), key];\n            }\n            return [\n                key,\n                {\n                    ...val,\n                    type: property.interfaceType,\n                    description: property.description,\n                },\n            ];\n        }));\n        return node;\n    });\n}\n","import propertyMapper from \"./property-mapper\";\nimport { comment, nodeType, transformRef, tsArrayOf, tsIntersectionOf, tsUnionOf, } from \"./utils\";\nexport const PRIMITIVES = {\n    boolean: \"boolean\",\n    binary: \"string\",\n    byte: \"string\",\n    date: \"string\",\n    dateTime: \"string\",\n    password: \"string\",\n    string: \"string\",\n    double: \"number\",\n    float: \"number\",\n    integer: \"number\",\n    number: \"number\",\n};\nexport default function generateTypesV2(schema, options) {\n    if (!schema.definitions) {\n        throw new Error(`‚õîÔ∏è 'definitions' missing from schema https://swagger.io/specification/v2/#definitions-object`);\n    }\n    const propertyMapped = options\n        ? propertyMapper(schema.definitions, options.propertyMapper)\n        : schema.definitions;\n    function transform(node) {\n        switch (nodeType(node)) {\n            case \"ref\": {\n                return transformRef(node.$ref);\n            }\n            case \"string\":\n            case \"number\":\n            case \"boolean\": {\n                return nodeType(node) || \"any\";\n            }\n            case \"enum\": {\n                return tsUnionOf(node.enum.map((item) => `'${item}'`));\n            }\n            case \"object\": {\n                if ((!node.properties || !Object.keys(node.properties).length) &&\n                    !node.allOf &&\n                    !node.additionalProperties) {\n                    return `{ [key: string]: any }`;\n                }\n                let properties = createKeys(node.properties || {}, node.required);\n                if (node.additionalProperties) {\n                    properties += `[key: string]: ${nodeType(node.additionalProperties) || \"any\"};\\n`;\n                }\n                return tsIntersectionOf([\n                    ...(node.allOf ? node.allOf.map(transform) : []),\n                    ...(properties ? [`{ ${properties} }`] : []),\n                ]);\n                break;\n            }\n            case \"array\": {\n                return tsArrayOf(transform(node.items));\n            }\n        }\n        return \"\";\n    }\n    function createKeys(obj, required = []) {\n        let output = \"\";\n        Object.entries(obj).forEach(([key, value]) => {\n            if (value.description) {\n                output += comment(value.description);\n            }\n            output += `\"${key}\"${!required || !required.includes(key) ? \"?\" : \"\"}: `;\n            output += transform(value);\n            output += \";\\n\";\n        });\n        return output;\n    }\n    return `export interface definitions {\n    ${createKeys(propertyMapped, Object.keys(propertyMapped))}\n  }`;\n}\n","import propertyMapper from \"./property-mapper\";\nimport { comment, nodeType, transformRef, tsArrayOf, tsIntersectionOf, tsPartial, tsUnionOf, } from \"./utils\";\nexport const PRIMITIVES = {\n    boolean: \"boolean\",\n    string: \"string\",\n    integer: \"number\",\n    number: \"number\",\n};\nexport default function generateTypesV3(schema, options) {\n    if (!schema.components || !schema.components.schemas) {\n        throw new Error(`‚õîÔ∏è 'components' missing from schema https://swagger.io/specification`);\n    }\n    const propertyMapped = options\n        ? propertyMapper(schema.components.schemas, options.propertyMapper)\n        : schema.components.schemas;\n    function transform(node) {\n        switch (nodeType(node)) {\n            case \"ref\": {\n                return transformRef(node.$ref);\n            }\n            case \"string\":\n            case \"number\":\n            case \"boolean\": {\n                return nodeType(node) || \"any\";\n            }\n            case \"enum\": {\n                return tsUnionOf(node.enum.map((item) => `'${item}'`));\n            }\n            case \"oneOf\": {\n                return tsUnionOf(node.oneOf.map(transform));\n            }\n            case \"anyOf\": {\n                return tsIntersectionOf(node.anyOf.map((anyOf) => tsPartial(transform(anyOf))));\n            }\n            case \"object\": {\n                if ((!node.properties || !Object.keys(node.properties).length) &&\n                    !node.allOf &&\n                    !node.additionalProperties) {\n                    return `{ [key: string]: any }`;\n                }\n                let properties = createKeys(node.properties || {}, node.required);\n                if (node.additionalProperties) {\n                    properties += `[key: string]: ${nodeType(node.additionalProperties) || \"any\"};\\n`;\n                }\n                return tsIntersectionOf([\n                    ...(node.allOf ? node.allOf.map(transform) : []),\n                    ...(properties ? [`{ ${properties} }`] : []),\n                ]);\n            }\n            case \"array\": {\n                return tsArrayOf(transform(node.items));\n            }\n        }\n        return \"\";\n    }\n    function createKeys(obj, required) {\n        let output = \"\";\n        Object.entries(obj).forEach(([key, value]) => {\n            if (value.description) {\n                output += comment(value.description);\n            }\n            output += `\"${key}\"${!required || !required.includes(key) ? \"?\" : \"\"}: `;\n            if (value.nullable) {\n                output += \"(\";\n            }\n            output += transform(value);\n            if (value.nullable) {\n                output += \") | null\";\n            }\n            output += \";\\n\";\n        });\n        return output;\n    }\n    return `export interface components {\n    schemas: {\n      ${createKeys(propertyMapped, Object.keys(propertyMapped))}\n    }\n  }`;\n}\n","import path from \"path\";\nimport prettier from \"prettier\";\nimport { swaggerVersion } from \"./utils\";\nimport v2 from \"./v2\";\nimport v3 from \"./v3\";\nexport const WARNING_MESSAGE = `/**\n* This file was auto-generated by swagger-to-ts.\n* Do not make direct changes to the file.\n*/\n\n\n`;\nexport default function swaggerToTS(schema, options) {\n    const version = swaggerVersion(schema);\n    let output = `${WARNING_MESSAGE}`;\n    switch (version) {\n        case 2: {\n            output = output.concat(v2(schema, options));\n            break;\n        }\n        case 3: {\n            output = output.concat(v3(schema, options));\n            break;\n        }\n    }\n    let prettierOptions = { parser: \"typescript\" };\n    if (options && options.prettierConfig) {\n        try {\n            const userOptions = prettier.resolveConfig.sync(path.resolve(process.cwd(), options.prettierConfig));\n            prettierOptions = {\n                ...prettierOptions,\n                ...userOptions,\n            };\n        }\n        catch (err) {\n            console.error(`‚ùå ${err}`);\n        }\n    }\n    return prettier.format(output, prettierOptions);\n}\n"],"names":["comment","text","trim","replace","fromEntries","entries","reduce","obj","key","val","nodeType","undefined","Array","isArray","enum","type","includes","anyOf","oneOf","items","swaggerVersion","definition","openapi","parseInt","swagger","Error","transformRef","ref","parts","split","slice","join","tsArrayOf","tsIntersectionOf","types","tsPartial","tsUnionOf","propertyMapper","schema","transform","JSON","parse","stringify","_","node","properties","Object","map","$ref","schemaObject","property","interfaceType","optional","required","description","filter","r","generateTypesV2","options","definitions","propertyMapped","item","keys","length","allOf","additionalProperties","createKeys","output","forEach","value","generateTypesV3","components","schemas","nullable","WARNING_MESSAGE","swaggerToTS","version","concat","v2","v3","prettierOptions","parser","prettierConfig","userOptions","prettier","resolveConfig","sync","path","resolve","process","cwd","err","console","error","format"],"mappings":"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"}